{
    // The meta file for a user plugin contains the information needed to run and display a plugin.
    // By default the extension for these types of files ends in '.meta', but this can be configured in general config.

    //  *** Mandatory fields ***

    // The name of the execution file to run
    "binFileName": "",

    // Name of the plugin
    "name": "",

    // Plugin description
    "description": "",

    // What category. Options can be found in 'PluginCategory' type in the code.
    // Currently the options are: 'Media' | 'Net' | 'FileSystem' | 'System'
    "category": "",

    // The type of events the plugin will listen for. These can be used even when a plugin runs on a schedule
    // type EventType = 'add' | 'addDir' | 'change' | 'unlink' | 'unlinkDir' | 'ready' | 'raw' | 'error' | 'none'
    // NOTE: This field must be defined, but can be an empty array"
    "eventTypes": [ ],

    // The configuration the plugin will start off with the first time it's run. The first time it executes this will be written
    // to the plugin configuration file and can be modified to control the plugin
    "defaultJsonConfig": {},

    // *** Optional fields ***

    // When false the plugin will not be run. Defaults to true
    "enabled": true,

    // Pause for a number of minutes before executing plugin (number can be less than 1). Defaults to 0
    "runDelayInMinutes": 0,

    // Will allow the plugin to be run on a schedule if 'runPluginEveryXMinutes' is a positive number. Defaults to false
    "isEligibleForSchedule": false,

    // This will cause the plugin to run on a schedule
    // The number can be fractional
    // A plugin can set this and still respond to events
    // The general config (option 'PluginWaitTimeFloorInMinutes') will prevent a plugin from being
    // scheduled at too low of a number
    // Defaults to 0.
    "runPluginEveryXMinutes": 0
}
